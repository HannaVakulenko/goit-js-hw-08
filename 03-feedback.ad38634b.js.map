{"mappings":"gfAIA,IAAAA,EAAAC,EAAA,SAGMC,EAAOC,SAASC,cAAc,kBAC9BC,EAAQF,SAASC,cAAc,uBAC/BE,EAAUH,SAASC,cAAc,4BAEjCG,EAAmB,sBAGCL,EAArBM,iBACH,SACA,EAAAR,EAAAS,WAAS,SAAAC,GAE0E,IAA3EC,EAAe,CAAEC,MAAOP,EAAMQ,MAAOC,QAASR,EAAQO,OAIhBE,aAA/BC,QAAQT,EAAkBU,KAAKC,UAAUP,G,GACrD,MAIqBT,EAArBM,iBAAiB,UAAU,SAAAE,GAIE,GAHhCA,EAAES,iBAGkB,KAAhBd,EAAMQ,OAAkC,KAAlBP,EAAQO,MAChC,OAAOO,MAAM,mCAI0CC,QAAjDC,IAAI,CAAEV,MAAOP,EAAMQ,MAAOC,QAASR,EAAQO,QAEnDX,EAAKqB,QACaR,aAALS,WAAWjB,E,IAKV,IAWVkB,EAXO,SAAAC,GACX,IACE,IAAMC,EAAkBZ,aAAaa,QAAQF,GAEN,OAAZ,OAApBC,OAA2BE,EAAYZ,KAAKa,MAAMH,E,CAEzD,MAAOI,GACPV,QAAQU,MAAM,oBAAqBA,EAAMjB,Q,EAIpBkB,CAAKzB,GAI1BkB,IACFpB,EAAMQ,MAAQY,EAAiBb,MAC/BN,EAAQO,MAAQY,EAAiBX,Q","sources":["src/js/03-feedback.js"],"sourcesContent":["// Завдання 3 - форма зворотного зв'язку\n// HTML містить розмітку форми. Напиши скрипт, який буде зберігати\n// значення полів у локальне сховище, коли користувач щось друкує.\n\nimport { throttle } from 'lodash'; //Додали до проекту бібліотеку lodash.throttle\n\n// Знаходження в документі елементів форми\nconst form = document.querySelector('.feedback-form');\nconst email = document.querySelector('input[name=\"email\"]');\nconst message = document.querySelector('textarea[name=\"message\"]');\n// Ключ для сховища\nconst LOCALSTORAGE_KEY = 'feedback-form-state';\n\n// Додаємо слухача події input до форми\nform.addEventListener(\n  'input',\n  throttle(e => {\n    // Створення об'єкту з властивостями email та message, в яких будуть зберігатися відповідні значення полів форми\n    const objectToSave = { email: email.value, message: message.value };\n\n    // Запис у локальне сховище значень полів об'єкту в форматі строки JSON\n    // Cховище оновлюється не частіше, ніж раз на 500 мілісекунд)\n    localStorage.setItem(LOCALSTORAGE_KEY, JSON.stringify(objectToSave));\n  }, 500)\n);\n\n// Додаємо слухача події submit до форми\nform.addEventListener('submit', e => {\n  e.preventDefault(); // відміняє перезавантеження сторінки при натисканні кнопки \"submit\"\n\n  // Перевірка чи заповнені всі поля форми\n  if (email.value === '' || message.value === '') {\n    return alert('Будь-ласка, заповніть всі поля!');\n  }\n\n  // Виведення у консоль об'єкта з полями та їхніми поточними значеннями\n  console.log({ email: email.value, message: message.value });\n\n  form.reset(); // очищення полів форми\n  localStorage.removeItem(LOCALSTORAGE_KEY); // видаляє записи зі сховища за ключем\n});\n\n// Обробка помилок під час зчитування запису за ключем зі сховища\n// Стандартний метод load\nconst load = key => {\n  try {\n    const serializedState = localStorage.getItem(key); //зчитування поточного значення ключа сховища\n\n    return serializedState === null ? undefined : JSON.parse(serializedState);\n    // Якщо значення не записане - поверне undefined, інакше розпарсить елемент у валідний об'єкт.\n  } catch (error) {\n    console.error('Get state error: ', error.message);\n  }\n};\n// Виклик стандартного методу load для значень ключа LOCALSTORAGE_KEY\nconst localStorageData = load(LOCALSTORAGE_KEY);\n\n// Перевірка стану сховища, і якщо там є збережені дані, то поля форми будуть ними заповнені.\n// В іншому випадку поля будуть порожніми.\nif (localStorageData) {\n  email.value = localStorageData.email;\n  message.value = localStorageData.message;\n}\n"],"names":["$1WSnx","parcelRequire","$b00c40859be242c5$var$form","document","querySelector","$b00c40859be242c5$var$email","$b00c40859be242c5$var$message","$b00c40859be242c5$var$LOCALSTORAGE_KEY","addEventListener","throttle","e","objectToSave","email","value","message","localStorage","setItem","JSON","stringify","preventDefault","alert","console","log","reset","removeItem","$b00c40859be242c5$var$localStorageData","key","serializedState","getItem","undefined","parse","error","$b00c40859be242c5$var$load"],"version":3,"file":"03-feedback.ad38634b.js.map"}